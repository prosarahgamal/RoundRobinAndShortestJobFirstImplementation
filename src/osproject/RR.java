/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package osproject;

import java.awt.Color;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Sara
 */
public class RR extends javax.swing.JFrame {

    
    public static int taskNum;
    public static int qNum;
    private int arrIndex;
    private int taskCounter;
    public static String[] taskNames;
    public static int[] arriveTime;
    public static int[] serviceTime;
    public static int[] finishTime;
    public static int[] tRTime;
    public static int[] waitTime;
    
    public static double avgWaitTime;
    public static double avgTRTime;

    public RR() {
        initComponents();
        nTasks.requestFocusInWindow();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        tasksTblscroll = new javax.swing.JScrollPane();
        tasksTbl = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        nTasksLbl = new javax.swing.JLabel();
        nTasks = new javax.swing.JTextField();
        okBtn = new javax.swing.JButton();
        quantumLbl = new javax.swing.JLabel();
        quantum = new javax.swing.JTextField();
        jPanel4 = new javax.swing.JPanel();
        namelbl = new javax.swing.JLabel();
        taskName = new javax.swing.JTextField();
        aTime = new javax.swing.JTextField();
        sTime = new javax.swing.JTextField();
        slbl = new javax.swing.JLabel();
        albl = new javax.swing.JLabel();
        addTaskBtn = new javax.swing.JButton();
        errorlbl = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        calBtn = new javax.swing.JButton();
        jPanel6 = new javax.swing.JPanel();
        resetBtn = new javax.swing.JButton();
        rtrnBtn = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new java.awt.GridLayout(1, 0));

        tasksTblscroll.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        tasksTbl.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        tasksTbl.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Task Name", "Arrive Time", "Serice Time"
            }
        ));
        tasksTbl.setRowHeight(30);
        tasksTblscroll.setViewportView(tasksTbl);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(tasksTblscroll, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 602, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(tasksTblscroll, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 789, Short.MAX_VALUE)
        );

        getContentPane().add(jPanel1);

        jPanel2.setLayout(new java.awt.GridLayout(3, 0));

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));

        nTasksLbl.setFont(new java.awt.Font("Tekton Pro Ext", 3, 18)); // NOI18N
        nTasksLbl.setText("Enter Tasks Number");

        nTasks.setFont(new java.awt.Font("Times New Roman", 3, 18)); // NOI18N
        nTasks.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        nTasks.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nTasksActionPerformed(evt);
            }
        });

        okBtn.setBackground(new java.awt.Color(0, 240, 240));
        okBtn.setFont(new java.awt.Font("Tekton Pro Ext", 1, 24)); // NOI18N
        okBtn.setText("OK");
        okBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                okBtnActionPerformed(evt);
            }
        });

        quantumLbl.setFont(new java.awt.Font("Tekton Pro Ext", 3, 18)); // NOI18N
        quantumLbl.setText("Enter Quantum");

        quantum.setFont(new java.awt.Font("Times New Roman", 3, 18)); // NOI18N
        quantum.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        quantum.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                quantumActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(110, 110, 110)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(quantumLbl, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(128, 128, 128)
                        .addComponent(quantum, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(okBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(nTasksLbl, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(128, 128, 128)
                        .addComponent(nTasks, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(119, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(37, 37, 37)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(nTasksLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(nTasks, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(26, 26, 26)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(quantumLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(quantum, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 32, Short.MAX_VALUE)
                .addComponent(okBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(32, 32, 32))
        );

        jPanel2.add(jPanel3);

        jPanel4.setBackground(new java.awt.Color(0, 240, 240));

        namelbl.setFont(new java.awt.Font("Tekton Pro Ext", 2, 18)); // NOI18N
        namelbl.setText("Enter Task Name");

        taskName.setFont(new java.awt.Font("Times New Roman", 2, 18)); // NOI18N
        taskName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                taskNameActionPerformed(evt);
            }
        });

        aTime.setFont(new java.awt.Font("Times New Roman", 2, 18)); // NOI18N

        sTime.setFont(new java.awt.Font("Times New Roman", 2, 18)); // NOI18N

        slbl.setFont(new java.awt.Font("Tekton Pro Ext", 2, 18)); // NOI18N
        slbl.setText("Enter Service Time");

        albl.setFont(new java.awt.Font("Tekton Pro Ext", 2, 18)); // NOI18N
        albl.setText("Enter Arrival Time");

        addTaskBtn.setBackground(new java.awt.Color(255, 255, 255));
        addTaskBtn.setFont(new java.awt.Font("Tekton Pro Ext", 3, 24)); // NOI18N
        addTaskBtn.setText("Add Task");
        addTaskBtn.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        addTaskBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addTaskBtnActionPerformed(evt);
            }
        });

        errorlbl.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap(82, Short.MAX_VALUE)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(namelbl, javax.swing.GroupLayout.PREFERRED_SIZE, 191, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(albl, javax.swing.GroupLayout.PREFERRED_SIZE, 191, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(slbl, javax.swing.GroupLayout.PREFERRED_SIZE, 191, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(56, 56, 56)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(addTaskBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(taskName)
                    .addComponent(aTime)
                    .addComponent(sTime, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(102, 102, 102))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(errorlbl, javax.swing.GroupLayout.PREFERRED_SIZE, 308, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addGap(0, 48, Short.MAX_VALUE)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(taskName, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(namelbl, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(albl, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(aTime, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(slbl, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(sTime, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(errorlbl, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(8, 8, 8)
                .addComponent(addTaskBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jPanel2.add(jPanel4);

        jPanel5.setLayout(new java.awt.GridLayout(1, 2));

        calBtn.setBackground(new java.awt.Color(255, 76, 59));
        calBtn.setFont(new java.awt.Font("Times New Roman", 3, 45)); // NOI18N
        calBtn.setForeground(new java.awt.Color(255, 255, 255));
        calBtn.setText("CALCULATE");
        calBtn.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        calBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                calBtnActionPerformed(evt);
            }
        });
        jPanel5.add(calBtn);

        jPanel6.setLayout(new java.awt.GridLayout(2, 0));

        resetBtn.setBackground(new java.awt.Color(255, 208, 52));
        resetBtn.setFont(new java.awt.Font("Times New Roman", 1, 36)); // NOI18N
        resetBtn.setText("RESET");
        resetBtn.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        resetBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resetBtnActionPerformed(evt);
            }
        });
        jPanel6.add(resetBtn);

        rtrnBtn.setBackground(new java.awt.Color(0, 114, 187));
        rtrnBtn.setFont(new java.awt.Font("Times New Roman", 1, 36)); // NOI18N
        rtrnBtn.setText("RETURN");
        rtrnBtn.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        rtrnBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rtrnBtnActionPerformed(evt);
            }
        });
        jPanel6.add(rtrnBtn);

        jPanel5.add(jPanel6);

        jPanel2.add(jPanel5);

        getContentPane().add(jPanel2);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void nTasksActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nTasksActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_nTasksActionPerformed

    private void okBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_okBtnActionPerformed
        // TODO add your handling code here:
        if (nTasks.getText().isEmpty())
        {
            nTasks.setBackground(Color.lightGray);
        }
        else if (quantum.getText().isEmpty())
        {
            quantum.setBackground(Color.lightGray);
        }
        else
        {
            nTasks.setBackground(Color.WHITE);
            quantum.setBackground(Color.white);
            
            taskNum = Integer.parseInt(nTasks.getText());
            qNum = Integer.parseInt(quantum.getText());
           
            taskName.requestFocusInWindow();
            
            taskNames = new String[taskNum];
            arriveTime = new int[taskNum];
            serviceTime = new int[taskNum];
            
            arrIndex = 0;
            taskCounter = 0;
        }
    }//GEN-LAST:event_okBtnActionPerformed

    private void taskNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_taskNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_taskNameActionPerformed

    private void addTaskBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addTaskBtnActionPerformed
        // TODO add your handling code here:
        String name = taskName.getText();
        String arrive = aTime.getText();
        String service = sTime.getText();
        if (name.isEmpty() || arrive.isEmpty() || service.isEmpty() || taskNum <= 0)    //check if there is an error in data
        {
            errorlbl.setText("error in data!");
        }
        else
        {
            errorlbl.setText("");
            if(taskCounter < taskNum)
            {
                DefaultTableModel model = (DefaultTableModel) tasksTbl.getModel() ;  //add data to table
                model.addRow(new Object[]{name,arrive,service});

                taskName.setText("");      //empty the textboxes
                aTime.setText("");
                sTime.setText("");

                taskNames[arrIndex] = name;
                arriveTime[arrIndex] = Integer.parseInt(arrive);
                serviceTime[arrIndex++] = Integer.parseInt(service);
                taskName.requestFocusInWindow();
                taskCounter++;
            }
            else
            {
                errorlbl.setText("You added all the tasks already!");
            }
        }
    }//GEN-LAST:event_addTaskBtnActionPerformed

    private void calBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_calBtnActionPerformed
        
        int i, j, k, m, l;         //for the "for" loops
        int time = 0, sum;         //"time" for the current time    "sum" to carry the summation of the service time > to know if all the tasks are done or not
        int temp[] = serviceTime.clone();     //a copy of service time
        
        finishTime = new int[taskNum];
        waitTime = new int[taskNum];
        tRTime = new int[taskNum];

        do{                    
           for(i = 0; i < taskNum; i++)       //looping through all the tasks
           {
               if(arriveTime[i] <= time && temp[i] > 0)     //checking if the task has arrived and it's been done before
               {
                   if(temp[i] > qNum)         //checking if the service time is bigger than the quantum
                   {
                       temp[i] -= qNum;
                       time += qNum;
                       for ( j = 0; j < taskNum; j++)     //add the quantum to the wait time for the other tasks
                       {
                           if(j != i && (arriveTime[j] < time || arriveTime[j] == 0) && temp[j] > 0)
                           {
                               if ((time - arriveTime[j]) < qNum)
                                   waitTime[j] += (time - arriveTime[j]);
                               else
                                   waitTime[j] += qNum;
                           }
                       }
                   }
                   else                      //if the service time is less or equal to quantum
                   {
                       time += temp[i];
                       for(k = 0; k < taskNum; k++)           //add the service time to the wait time for the others tasks
                       {
                           if (k != i && (arriveTime[k] < time || arriveTime[k] == 0) && temp[k] > 0)
                            {
                                if ((time - arriveTime[k]) < temp[i])
                                    waitTime[k] += (time - arriveTime[k]);
                                else
                                    waitTime[k] += temp[i];
                           }
                       }
                       
                       finishTime[i] = time;
                       temp[i] = 0;
                   }
               }
           }
           sum = 0;
           for (m = 0; m < taskNum; m++)
           {
               sum += temp[m];
           }
           
       }while(sum > 0);     //repeat untill all the tasks are done
        
        int wtSum = 0, trSum=0;
        
        //calculating the wait time and the turn around time
        
        for ( l = 0; l < taskNum; l++)
        {
            wtSum += waitTime[l];
            tRTime[l] = waitTime[l] + serviceTime[l];
            trSum += tRTime[l];
        }
        
        avgWaitTime = (double)wtSum / taskNum;
        avgTRTime = (double)trSum / taskNum;
        
        this.dispose();
        new Solution(2).setVisible(true);

    }//GEN-LAST:event_calBtnActionPerformed

    private void resetBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resetBtnActionPerformed
        // TODO add your handling code here:
        DefaultTableModel model = (DefaultTableModel) tasksTbl.getModel();
        model.setRowCount(0);
        nTasks.setText("");
        quantum.setText("");
        taskNum = 0;
        nTasks.requestFocusInWindow();
    }//GEN-LAST:event_resetBtnActionPerformed

    private void rtrnBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rtrnBtnActionPerformed
        // TODO add your handling code here:
        this.dispose();
        new intro().setVisible(true);
    }//GEN-LAST:event_rtrnBtnActionPerformed

    private void quantumActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_quantumActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_quantumActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(RR.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(RR.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(RR.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(RR.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new RR().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField aTime;
    private javax.swing.JButton addTaskBtn;
    private javax.swing.JLabel albl;
    private javax.swing.JButton calBtn;
    private javax.swing.JLabel errorlbl;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JTextField nTasks;
    private javax.swing.JLabel nTasksLbl;
    private javax.swing.JLabel namelbl;
    private javax.swing.JButton okBtn;
    private javax.swing.JTextField quantum;
    private javax.swing.JLabel quantumLbl;
    private javax.swing.JButton resetBtn;
    private javax.swing.JButton rtrnBtn;
    private javax.swing.JTextField sTime;
    private javax.swing.JLabel slbl;
    private javax.swing.JTextField taskName;
    private javax.swing.JTable tasksTbl;
    private javax.swing.JScrollPane tasksTblscroll;
    // End of variables declaration//GEN-END:variables
}
