/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package osproject;

import java.awt.Color;
import java.awt.GraphicsConfiguration;
import java.util.ArrayList;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Sara
 */
public class SJF extends javax.swing.JFrame {


    public static int taskNum;
    private int arrIndex = 0;
    private int taskCounter = 0;
    public static String[] taskNames;
    public static int[] arriveTime;
    public static int[] serviceTime;
    public static int[] startTime;
    public static int[] finishTime;
    public static int[] tRTime;
    public static int[] waitTime;
    
    public static double avgWaitTime;
    public static double avgTRTime;

    public SJF(GraphicsConfiguration gc) {
        super(gc);
    }
    
    public SJF() {
        initComponents();
        nTasks.requestFocusInWindow();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        tblPanel = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tasksTbl = new javax.swing.JTable();
        controlsPanel = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        nTasksLbl = new javax.swing.JLabel();
        nTasks = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        addTaskPanel = new javax.swing.JPanel();
        namelbl = new javax.swing.JLabel();
        taskName = new javax.swing.JTextField();
        albl = new javax.swing.JLabel();
        aTime = new javax.swing.JTextField();
        addTaskBtn = new javax.swing.JButton();
        errorlbl = new javax.swing.JLabel();
        sTime = new javax.swing.JTextField();
        slbl = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        calBtn = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        resetBtn = new javax.swing.JButton();
        rtrnBtn = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setPreferredSize(new java.awt.Dimension(1200, 800));
        getContentPane().setLayout(new java.awt.GridLayout(1, 0));

        tblPanel.setBackground(new java.awt.Color(198, 200, 202));
        tblPanel.setLayout(new java.awt.GridLayout(1, 0));

        tasksTbl.setBackground(new java.awt.Color(198, 200, 202));
        tasksTbl.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        tasksTbl.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        tasksTbl.setForeground(new java.awt.Color(70, 48, 24));
        tasksTbl.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Task Name", "Arrival Time", "Service Time"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                true, false, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tasksTbl.setEnabled(false);
        tasksTbl.setRowHeight(30);
        tasksTbl.setSelectionBackground(new java.awt.Color(0, 204, 204));
        tasksTbl.getTableHeader().setResizingAllowed(false);
        tasksTbl.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(tasksTbl);

        tblPanel.add(jScrollPane1);

        getContentPane().add(tblPanel);

        controlsPanel.setBackground(new java.awt.Color(198, 200, 202));
        controlsPanel.setLayout(new java.awt.GridLayout(3, 0));

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));

        nTasksLbl.setFont(new java.awt.Font("Tekton Pro Ext", 3, 18)); // NOI18N
        nTasksLbl.setText("Enter Tasks Number");

        nTasks.setFont(new java.awt.Font("Times New Roman", 3, 18)); // NOI18N
        nTasks.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        nTasks.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nTasksActionPerformed(evt);
            }
        });

        jButton1.setBackground(new java.awt.Color(0, 240, 240));
        jButton1.setFont(new java.awt.Font("Tekton Pro Ext", 1, 24)); // NOI18N
        jButton1.setText("OK");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(98, 98, 98)
                .addComponent(nTasksLbl)
                .addGap(128, 128, 128)
                .addComponent(nTasks, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(159, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(210, 210, 210))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(88, 88, 88)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(nTasksLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(nTasks, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(35, 35, 35)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(54, Short.MAX_VALUE))
        );

        controlsPanel.add(jPanel2);

        addTaskPanel.setBackground(new java.awt.Color(0, 204, 204));
        addTaskPanel.setNextFocusableComponent(calBtn);

        namelbl.setFont(new java.awt.Font("Tekton Pro Ext", 2, 18)); // NOI18N
        namelbl.setText("Enter Task Name");

        taskName.setFont(new java.awt.Font("Times New Roman", 2, 18)); // NOI18N
        taskName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                taskNameActionPerformed(evt);
            }
        });

        albl.setFont(new java.awt.Font("Tekton Pro Ext", 2, 18)); // NOI18N
        albl.setText("Enter Arrival Time");

        aTime.setFont(new java.awt.Font("Times New Roman", 2, 18)); // NOI18N

        addTaskBtn.setBackground(new java.awt.Color(255, 255, 255));
        addTaskBtn.setFont(new java.awt.Font("Tekton Pro Ext", 3, 24)); // NOI18N
        addTaskBtn.setText("Add Task");
        addTaskBtn.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        addTaskBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addTaskBtnActionPerformed(evt);
            }
        });

        errorlbl.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        sTime.setFont(new java.awt.Font("Times New Roman", 2, 18)); // NOI18N

        slbl.setFont(new java.awt.Font("Tekton Pro Ext", 2, 18)); // NOI18N
        slbl.setText("Enter Service Time");

        javax.swing.GroupLayout addTaskPanelLayout = new javax.swing.GroupLayout(addTaskPanel);
        addTaskPanel.setLayout(addTaskPanelLayout);
        addTaskPanelLayout.setHorizontalGroup(
            addTaskPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(addTaskPanelLayout.createSequentialGroup()
                .addGap(79, 79, 79)
                .addGroup(addTaskPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(addTaskPanelLayout.createSequentialGroup()
                        .addComponent(errorlbl, javax.swing.GroupLayout.PREFERRED_SIZE, 295, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(addTaskPanelLayout.createSequentialGroup()
                        .addGroup(addTaskPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(namelbl, javax.swing.GroupLayout.PREFERRED_SIZE, 191, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(albl, javax.swing.GroupLayout.PREFERRED_SIZE, 191, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(slbl, javax.swing.GroupLayout.PREFERRED_SIZE, 191, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 98, Short.MAX_VALUE)
                        .addGroup(addTaskPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(addTaskBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(taskName)
                            .addComponent(aTime, javax.swing.GroupLayout.DEFAULT_SIZE, 171, Short.MAX_VALUE)
                            .addComponent(sTime))
                        .addGap(91, 91, 91))))
        );
        addTaskPanelLayout.setVerticalGroup(
            addTaskPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(addTaskPanelLayout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addGroup(addTaskPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(taskName, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(namelbl, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(addTaskPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(albl, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(aTime, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(addTaskPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(slbl, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(sTime, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(13, 13, 13)
                .addComponent(errorlbl, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(addTaskBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(19, Short.MAX_VALUE))
        );

        controlsPanel.add(addTaskPanel);

        jPanel1.setLayout(new java.awt.GridLayout(1, 2));

        calBtn.setBackground(new java.awt.Color(255, 76, 59));
        calBtn.setFont(new java.awt.Font("Times New Roman", 3, 45)); // NOI18N
        calBtn.setForeground(new java.awt.Color(255, 255, 255));
        calBtn.setText("CALCULATE");
        calBtn.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        calBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                calBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 315, Short.MAX_VALUE)
            .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(calBtn, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 263, Short.MAX_VALUE)
            .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(calBtn, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 263, Short.MAX_VALUE))
        );

        jPanel1.add(jPanel4);

        jPanel3.setLayout(new java.awt.GridLayout(2, 0));

        resetBtn.setBackground(new java.awt.Color(255, 208, 52));
        resetBtn.setFont(new java.awt.Font("Times New Roman", 1, 36)); // NOI18N
        resetBtn.setText("RESET");
        resetBtn.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        resetBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resetBtnActionPerformed(evt);
            }
        });
        jPanel3.add(resetBtn);

        rtrnBtn.setBackground(new java.awt.Color(0, 114, 187));
        rtrnBtn.setFont(new java.awt.Font("Times New Roman", 1, 36)); // NOI18N
        rtrnBtn.setText("RETURN");
        rtrnBtn.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        rtrnBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rtrnBtnActionPerformed(evt);
            }
        });
        jPanel3.add(rtrnBtn);

        jPanel1.add(jPanel3);

        controlsPanel.add(jPanel1);

        getContentPane().add(controlsPanel);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void taskNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_taskNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_taskNameActionPerformed

    private void addTaskBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addTaskBtnActionPerformed
        // TODO add your handling code here:
        String name = taskName.getText();
        String arrive = aTime.getText();
        String service = sTime.getText();
        if (name.isEmpty() || arrive.isEmpty() || service.isEmpty() || taskNum <= 0)    //check if there is an error in data
        {
            errorlbl.setText("error in data!");
        }
        else
        {
            errorlbl.setText("");
            if(taskCounter < taskNum)
            {
                DefaultTableModel model = (DefaultTableModel) tasksTbl.getModel();   //add data to table
                model.addRow(new Object[]{name,arrive,service});

                taskName.setText("");      //empty the textboxes 
                aTime.setText("");
                sTime.setText("");

                taskNames[arrIndex] = name;
                arriveTime[arrIndex] = Integer.parseInt(arrive);
                serviceTime[arrIndex++] = Integer.parseInt(service);
                taskName.requestFocusInWindow();
                taskCounter++;
            }
            else
            {
                errorlbl.setText("you added all the tasks already!");
            }
        }
    }//GEN-LAST:event_addTaskBtnActionPerformed

    private void resetBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resetBtnActionPerformed
        // TODO add your handling code here:
        DefaultTableModel model = (DefaultTableModel) tasksTbl.getModel();
        model.setRowCount(0);
        nTasks.setText("");
        nTasks.requestFocusInWindow();
    }//GEN-LAST:event_resetBtnActionPerformed

    private void rtrnBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rtrnBtnActionPerformed
        // TODO add your handling code here:
        this.dispose();
        new intro().setVisible(true);
    }//GEN-LAST:event_rtrnBtnActionPerformed

    private void calBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_calBtnActionPerformed

        int time=0, min = 0, j=0, count;   //"time" for the current time  "min" for the least service time   "count" to identify if it is the first operation in this turn   "j" to save the task with the least time
        int c, i, y;    //for the "for" loops
        int totalWait = 0, totalTR = 0;    
        startTime = new int[taskNum];
        finishTime = new int[taskNum];
        waitTime = new int[taskNum];
        tRTime = new int[taskNum];
        for (c = 0; c < taskNum; c++)         
        {
            count = 0;
            for (i = 0; i < taskNum; i++)     //looping through all the tasks
            {
                if (finishTime[i] == 0)        //checking if the task wasn't done before
                {
                    if (arriveTime[i] <= time)   //checking if the task arrived or not
                    {
                        count++;                 
                        if (count == 1)          //checking if it's the first task in this turn
                        {
                            min = serviceTime[i];
                            j = i;
                        }
                        else
                        {
                            if(serviceTime[i] < min)    //checking if the task's service time is less than the current min
                            {
                                min = serviceTime[i];
                                j = i;
                            }
                        }
                    }
                }
            }
            startTime[j] = time;      
            time += min;
            finishTime[j] = time;
            
        }
        
        //calculating the wait time and turn around time
        for (y = 0; y < taskNum; y++)
        {
            waitTime[y] = startTime[y] - arriveTime[y];
            tRTime[y] = waitTime[y] + serviceTime[y];
            totalWait += waitTime[y];
            totalTR += tRTime[y];
        }
        
        
        avgWaitTime = (double)totalWait / taskNum;
        avgTRTime = (double)totalTR / taskNum;
        
        this.dispose();     //hide this frame
        new Solution(1).setVisible(true);    //view the solution frame with the answer
        
        
    }//GEN-LAST:event_calBtnActionPerformed

    private void nTasksActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nTasksActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_nTasksActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        if (nTasks.getText().isEmpty())     
        {
            nTasks.setBackground(Color.lightGray);
        }
        else
        {
            nTasks.setBackground(Color.WHITE);
            taskNum = Integer.parseInt(nTasks.getText());   
            taskName.requestFocusInWindow();
            taskNames = new String[taskNum];    
            arriveTime = new int[taskNum];
            serviceTime = new int[taskNum];
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SJF.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SJF.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SJF.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SJF.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new SJF().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField aTime;
    private javax.swing.JButton addTaskBtn;
    private javax.swing.JPanel addTaskPanel;
    private javax.swing.JLabel albl;
    private javax.swing.JButton calBtn;
    private javax.swing.JPanel controlsPanel;
    private javax.swing.JLabel errorlbl;
    private javax.swing.JButton jButton1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField nTasks;
    private javax.swing.JLabel nTasksLbl;
    private javax.swing.JLabel namelbl;
    private javax.swing.JButton resetBtn;
    private javax.swing.JButton rtrnBtn;
    private javax.swing.JTextField sTime;
    private javax.swing.JLabel slbl;
    private javax.swing.JTextField taskName;
    private javax.swing.JTable tasksTbl;
    private javax.swing.JPanel tblPanel;
    // End of variables declaration//GEN-END:variables
}
